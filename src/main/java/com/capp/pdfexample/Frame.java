package com.capp.pdfexample;

import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Font;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.BaseFont;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.print.attribute.standard.PrintQuality;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author mucahit.yilmaz
 */
public class Frame extends javax.swing.JFrame {

    private String fontFolder = "./fonts/";
    /**
     * Creates new form Frame
     */
    public Frame() {
        initComponents();
        this.setLocationRelativeTo(null);
        File fontsFolder = Paths.get(fontFolder).toFile();
        String[] list = fontsFolder.list();
        List<String> asList = new ArrayList<>(Arrays.asList(list));
        asList.add(0, "Default");
        fontsCmb.setModel(new DefaultComboBoxModel<>(asList.toArray(String[]::new)));
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        previewBtn = new javax.swing.JButton();
        scrollPane1 = new javax.swing.JScrollPane();
        ta1 = new javax.swing.JTextArea();
        printBtn = new javax.swing.JButton();
        paragraph1Lbl = new javax.swing.JLabel();
        paragraph2Lbl = new javax.swing.JLabel();
        scrollPane2 = new javax.swing.JScrollPane();
        ta2 = new javax.swing.JTextArea();
        fontsLbl = new javax.swing.JLabel();
        fontsCmb = new javax.swing.JComboBox<>();
        printQualityLbl = new javax.swing.JLabel();
        printQualityCmb = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("Form"); // NOI18N

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/mucahit/pdfexample/Bundle"); // NOI18N
        previewBtn.setText(bundle.getString("Frame.previewBtn.text")); // NOI18N
        previewBtn.setName("previewBtn"); // NOI18N
        previewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previewBtnActionPerformed(evt);
            }
        });

        scrollPane1.setName("scrollPane1"); // NOI18N

        ta1.setColumns(20);
        ta1.setRows(5);
        ta1.setWrapStyleWord(true);
        ta1.setName("ta1"); // NOI18N
        scrollPane1.setViewportView(ta1);

        printBtn.setText(bundle.getString("Frame.printBtn.text")); // NOI18N
        printBtn.setName("printBtn"); // NOI18N
        printBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printBtnActionPerformed(evt);
            }
        });

        paragraph1Lbl.setText(bundle.getString("Frame.paragraph1Lbl.text")); // NOI18N
        paragraph1Lbl.setName("paragraph1Lbl"); // NOI18N

        paragraph2Lbl.setText(bundle.getString("Frame.paragraph2Lbl.text")); // NOI18N
        paragraph2Lbl.setName("paragraph2Lbl"); // NOI18N

        scrollPane2.setName("scrollPane2"); // NOI18N

        ta2.setColumns(20);
        ta2.setRows(5);
        ta2.setWrapStyleWord(true);
        ta2.setName("ta2"); // NOI18N
        scrollPane2.setViewportView(ta2);

        fontsLbl.setLabelFor(fontsCmb);
        fontsLbl.setText(bundle.getString("Frame.fontsLbl.text")); // NOI18N
        fontsLbl.setName("fontsLbl"); // NOI18N

        fontsCmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Default", "FreeMono.ttf", "FreeSans.ttf", "LucidaSansUnicode.ttf" }));
        fontsCmb.setName("fontsCmb"); // NOI18N

        printQualityLbl.setText(bundle.getString("Frame.printQualityLbl.text")); // NOI18N
        printQualityLbl.setName("printQualityLbl"); // NOI18N

        printQualityCmb.setModel(new DefaultComboBoxModel<PrintQuality>(printQualityModel));
        printQualityCmb.setName("printQualityCmb"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPane1)
                    .addComponent(scrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(paragraph1Lbl)
                            .addComponent(paragraph2Lbl))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(previewBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(printBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fontsLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fontsCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(printQualityLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(printQualityCmb, 0, 293, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(paragraph1Lbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(paragraph2Lbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(previewBtn)
                    .addComponent(printBtn)
                    .addComponent(fontsLbl)
                    .addComponent(fontsCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(printQualityLbl)
                    .addComponent(printQualityCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private byte[] createPdfBytes() {
        var outputStream = new ByteArrayOutputStream();
        try {
            var doc = new Document(PageSize.A4);
            PdfWriter.getInstance(doc, outputStream);
            doc.open();

            var selectedFont = fontsCmb.getSelectedItem().toString();

            if (selectedFont.equals("Default")) {
                var p = new Paragraph(new Chunk(ta1.getText()));
                doc.add(p);

                doc.add(Chunk.NEWLINE);

                var p2 = new Paragraph(new Chunk(ta2.getText()));
                doc.add(p2);
            } else {
                var fontPath = fontFolder + selectedFont;
                var bf = BaseFont.createFont(fontPath, BaseFont.IDENTITY_H, true);
                var font = new Font(bf, 12);
                
                var p = new Paragraph(new Chunk(ta1.getText(), font));
                doc.add(p);

                doc.add(Chunk.NEWLINE);

                var p2 = new Paragraph(new Chunk(ta2.getText(), font));
                doc.add(p2);
            }

            doc.close();
        } catch (DocumentException | IOException ex) {
            Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
        }

        return outputStream.toByteArray();
    }

    private void previewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previewBtnActionPerformed
        Viewer.view(createPdfBytes());
    }//GEN-LAST:event_previewBtnActionPerformed

    private PrintQuality[] printQualityModel = new PrintQuality[]{PrintQuality.DRAFT, PrintQuality.NORMAL, PrintQuality.HIGH};
    private void printBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printBtnActionPerformed
        Printer.print(createPdfBytes(), printQualityCmb.getItemAt(printQualityCmb.getSelectedIndex()));
    }//GEN-LAST:event_printBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Frame().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> fontsCmb;
    private javax.swing.JLabel fontsLbl;
    private javax.swing.JLabel paragraph1Lbl;
    private javax.swing.JLabel paragraph2Lbl;
    private javax.swing.JButton previewBtn;
    private javax.swing.JButton printBtn;
    private javax.swing.JComboBox<PrintQuality> printQualityCmb;
    private javax.swing.JLabel printQualityLbl;
    private javax.swing.JScrollPane scrollPane1;
    private javax.swing.JScrollPane scrollPane2;
    private javax.swing.JTextArea ta1;
    private javax.swing.JTextArea ta2;
    // End of variables declaration//GEN-END:variables
}
